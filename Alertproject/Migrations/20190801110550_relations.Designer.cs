// <auto-generated />
using System;
using Alertproject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Alertproject.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20190801110550_relations")]
    partial class relations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Alertproject.Tables.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DoB");

                    b.Property<string>("Email");

                    b.Property<string>("JobTitle");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Alertproject.Tables.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Occurence");

                    b.Property<int>("Priorty");

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("TemplateId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Alertproject.Tables.EventProperties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventId");

                    b.Property<int>("TempfieldId");

                    b.Property<string>("value");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("TempfieldId")
                        .IsUnique();

                    b.ToTable("EventProps");
                });

            modelBuilder.Entity("Alertproject.Tables.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackgroungImg");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("Alertproject.Tables.TemplateFields", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FontFamily");

                    b.Property<int>("FontSize");

                    b.Property<string>("ForeColor");

                    b.Property<int>("LeftMargin");

                    b.Property<string>("PropertyName");

                    b.Property<int>("TemplateId");

                    b.Property<int>("TopMargin");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplatesFields");
                });

            modelBuilder.Entity("Alertproject.Tables.Event", b =>
                {
                    b.HasOne("Alertproject.Tables.Template", "Templates")
                        .WithMany("Events")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alertproject.Tables.EventProperties", b =>
                {
                    b.HasOne("Alertproject.Tables.Event", "Events")
                        .WithMany("EventsProps")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alertproject.Tables.TemplateFields", "TempFields")
                        .WithOne("EventPropers")
                        .HasForeignKey("Alertproject.Tables.EventProperties", "TempfieldId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Alertproject.Tables.TemplateFields", b =>
                {
                    b.HasOne("Alertproject.Tables.Template", "Template")
                        .WithMany("TemplatesFields")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
